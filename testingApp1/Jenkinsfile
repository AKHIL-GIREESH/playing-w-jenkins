pipeline {
    agent any

    tools {
        nodejs "23.5.0"
        sonarqube "sonarqube-710"
    }

    environment {
        PROJECT_DIR = "testingApp1"
    }

    stages {
        stage("Installing Dependencies") {
            steps {
                dir("${PROJECT_DIR}") {
                    sh '''
                        pwd
                        npm i --no-audit
                    '''
                }
            }
        }

        stage("Dependency Scanning") {
            parallel {
                stage("NPM Dependency Audit") {
                    steps {
                        dir("${PROJECT_DIR}") {
                            // sh "npm audit --audit-level=critical"
                            sh "npm audit --audit-level=critical"
                        }
                    }
                }

                stage("OWASP Dependency Check") {
                    steps {
                        dir("${PROJECT_DIR}") {
                            dependencyCheck additionalArguments: '''
                                --scan \'./\'
                                --out \'./\'
                                --format \'ALL\'
                                --prettyPrint''', odcInstallation: 'OWASP-DepCheck-12'
                        }
                    }
                }
            }
        }

        stage('Unit Testing'){
            steps{
                dir("${PROJECT_DIR}") {
                        sh 'npx vitest'
                }
            }
        }

        stage('Code Coverage'){
            steps{
                dir("${PROJECT_DIR}"){
                    catchError(buildResult: 'SUCCESS', message: 'Coverage less than threshold', stageResult: 'UNSTABLE') {
                        sh 'npx vitest run --coverage'
                    }
                }
            }
        }

        stage('SAST - SonarQube'){
            steps{
                dir("${PROJECT_DIR}"){
                        sh '''
                        sonar-scanner \
                            -Dsonar.projectKey=reactTesting \
                            -Dsonar.sources=. \
                            -Dsonar.host.url=http://localhost:9000 \
                            -Dsonar.token=sqp_141c826c1820a9e5ba1219649d71ca29d04d610a
                        '''
                }
            }
        }
    }

    post{
        always{
            junit allowEmptyResults: true, testResults: 'test-results.xml'
        }
    }
}